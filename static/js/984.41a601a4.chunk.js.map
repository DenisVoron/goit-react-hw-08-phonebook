{"version":3,"file":"static/js/984.41a601a4.chunk.js","mappings":"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","sources":["webpack://phonebook/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://phonebook/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://phonebook/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://phonebook/./src/components/Wrapper/Wrapper.module.css?9e3e","components/Wrapper/Wrapper.jsx","webpack://phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://phonebook/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\n\nexport const Container = ({ children }) => <div className={css.container}>{children}</div>;","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Section_section__Z2PLw\",\"sectionTitle\":\"Section_sectionTitle__in2ym\"};","import css from './Section.module.css';\n\n\nexport const Section = ({ title, children }) => (\n    <section className={css.section}>\n        <h2 className={css.sectionTitle}>{title}</h2>\n        {children}\n    </section>\n);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactsForm_wrapper__e4j5W\",\"form\":\"ContactsForm_form__1Y65-\",\"form-label\":\"ContactsForm_form-label__jN-oW\",\"input\":\"ContactsForm_input__UjXFK\",\"formBtn\":\"ContactsForm_formBtn__iBe7q\"};","import TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState } from 'react'\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/contactsSlice\";\nimport { addContact } from \"redux/contacts/operations\";\n\nimport { toast } from 'react-toastify';\n\nimport css from './ContactsForm.module.css';\n\n\nexport function ContactsForm() {\n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contact= useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        /*const addContact = {\n            name,\n            number,\n        };*/\n\n        contact.some(currentName => currentName.name.toLowerCase() === name.toLowerCase())\n      ? toast.warn(`${name} is already in contact`)\n      : dispatch(addContact({name, number}));\n\n        reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n    \n\n    const handleNameChange = event => {\n        const {name, value} = event.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    return (\n        <div className={css.wrapper}>\n            <form autoComplete='off' className={css.form} onSubmit={handleSubmit}>\n                <label className={css['form-label']}>\n                    {/*<input\n                        type=\"text\"\n                        className={css.input}\n                        name=\"name\"\n                        value={name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        onChange={handleNameChange}\n    />*/}\n                    <TextField type=\"text\"\n                        className={css.input}\n                        name=\"name\"\n                        value={name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        onChange={handleNameChange}\n                        label=\"Name\"\n                        variant=\"filled\"\n                        size=\"small\"\n                        sx={{\n                            '& > :not(style)': { height: '45px' },\n                        }}\n                    />\n                </label>\n                <label htmlFor=\"\">\n                    {/*<input\n                        type=\"tel\"\n                        className={css.input}\n                        name=\"number\"\n                        value={number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        onChange={handleNameChange}\n    />*/}\n                    <TextField type=\"tel\"\n                        className={css.input}\n                        name=\"number\"\n                        value={number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        onChange={handleNameChange}\n                        label=\"Number\"\n                        variant=\"filled\"\n                        size=\"small\"\n                        sx={{\n                            '& > :not(style)': { height: '45px' },\n                        }}\n                    />\n                </label>\n                <Button variant=\"contained\" type='submit' className={css.formBtn} size=\"small\">\n                    Add Contact\n                </Button>\n            </form>\n        </div>\n    );\n\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapperList\":\"Wrapper_wrapperList__E9Obg\"};","import css from './Wrapper.module.css';\n\nexport const Wrapper = ({ children }) => (\n    <div className={css.wrapperList}>\n        {children}\n    </div>\n);","// extracted by mini-css-extract-plugin\nexport default {\"inpyt-filter\":\"Filter_inpyt-filter__8KbFv\",\"input\":\"Filter_input__N7T3z\"};","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter, changeFilter } from \"../../redux/contacts/contactsSlice\";\n\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n\n    const contactsFilter = useSelector(getFilter);\n    const dispatch = useDispatch();\n    const changeFieldFilter = e => dispatch(changeFilter(e.currentTarget.value));\n\n\n    return (\n        <label htmlFor=\"\" className={css['inpyt-filter']}>\n            {/*<input\n                type=\"text\"\n                name=\"filter\"\n                value={contactsFilter}\n                onChange={changeFieldFilter}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    />*/}\n            <TextField\n                className={css.input}\n                type=\"text\"\n                name=\"filter\"\n                value={contactsFilter}\n                onChange={changeFieldFilter}\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                id=\"outlined-basic\"\n                label={<SearchIcon />}\n                variant=\"outlined\"\n               size=\"small\"\n            />\n        </label>\n    );\n    \n};\nFilter.prototype = {\n    filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"contactDescr\":\"Contact_contactDescr__ukW56\",\"contactBtn\":\"Contact_contactBtn__w8UT+\"};","import PropTypes from 'prop-types'\nimport { useDispatch } from \"react-redux\";\nimport { RiChatDeleteLine } from 'react-icons/ri';\nimport { deleteContact } from \"redux/contacts/operations\";\n\nimport css  from './Contact.module.css';\n\nexport const Contact = ({contact}) => {\n\n    const dispatch = useDispatch();\n    const handleDelete = () => dispatch(deleteContact(contact.id));\n\n    return (\n        <>\n            <p className={css.contactDescr}>\n                {contact.name}: <span>{contact.number}</span>\n            </p>\n            <button className={css.contactBtn} onClick={handleDelete}>\n                <RiChatDeleteLine size={25} />\n            </button>\n        </>\n    );\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"listItem\":\"ContactList_listItem__SptUx\"};","import PropTypes from 'prop-types'\nimport { useSelector } from \"react-redux\";\n\nimport { getContacts, getFilter } from \"../../redux/contacts/contactsSlice\";\nimport { Contact } from '../Contact/Contact';\n\nimport css from './ContactList.module.css';\n\n\nexport const ContactList = () => {\n    \n    const items = useSelector(getContacts);\n    const filter = useSelector(getFilter);\n\n    const contactsFilter = () => {\n        const filterNormalize = filter.toLowerCase();\n\n        return items.filter(contact =>\n            contact.name.toLowerCase().includes(filterNormalize)\n        );\n    };\n    \n    const filteredContacts = contactsFilter();\n\n    return (\n        <>\n            <ul className={css.list}>\n                {filteredContacts.map((contact) => (\n                    <li key={contact.id} className={css.listItem}>\n                        <Contact contact={contact} />\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n};\n\nContactList.propTypes = {\n    contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  )\n};","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { useEffect } from 'react';\nimport { useDispatch } from \"react-redux\";\n\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nimport { Container } from '../components/Container/Container'\nimport { Section } from '../components/Section/Section'\nimport { ContactsForm } from '../components/ContactsForm/ContactsForm';\nimport { Wrapper } from '../components/Wrapper/Wrapper';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <Container>\n            <Section title='Phonebook'>\n                <ContactsForm />\n            </Section>\n            <Section title='Contacts'>\n                <Wrapper>\n                    <Filter />\n                    <ContactList />\n                </Wrapper>\n                <ToastContainer\n                    position=\"top-center\"\n                    autoClose={2000}\n                    draggable\n                />\n            </Section>\n        </Container>\n    )\n}"],"names":["Container","children","className","css","Section","title","ContactsForm","useState","name","setName","number","setNumber","contact","useSelector","getContacts","dispatch","useDispatch","reset","handleNameChange","event","currentTarget","value","autoComplete","onSubmit","preventDefault","some","currentName","toLowerCase","toast","addContact","TextField","type","pattern","required","onChange","label","variant","size","sx","height","htmlFor","Button","Wrapper","Filter","contactsFilter","getFilter","e","changeFilter","id","Search","prototype","filter","PropTypes","Contact","onClick","deleteContact","ContactList","items","filteredContacts","filterNormalize","includes","map","Contacts","useEffect","fetchContacts","position","autoClose","draggable"],"sourceRoot":""}